service: hangman-serverless

plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${env:STAGE}
  region: ${env:REGION}
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
    USER_POOL: ${self:service}-userPool

resources:
  Resources:
    HangmanUserPool:
      Type: 'AWS::Cognito::UserPool'
      Properties:
        UserPoolName: ${self:provider.environment.USER_POOL}
    HangmanApiGatewayAuthorizer:
      Type: 'AWS::ApiGateway::Authorizer'
      Properties:
        IdentitySource: method.request.header.Authorization
        Name: HangmanAuthorizer
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - {
              'Fn::Join':
                [
                  '',
                  [
                    'arn:aws:cognito-idp:',
                    { Ref: 'AWS::Region' },
                    ':',
                    { Ref: 'AWS::AccountId' },
                    ':userpool/',
                    Ref: HangmanUserPool,
                  ],
                ],
            }
    HangmanTable:
      Type: 'AWS::DynamoDB::Table'
      # DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

functions:
  autoConfirmEmail:
    handler: handler.autoConfirmEmail
    # events:
    #   - cognitoUserPool:
    #       pool: ${self:provider.environment.USER_POOL}
    #       trigger: PreSignUp
  getGame:
    handler: handler.getGame
    events:
      - http:
          path: game
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: { Ref: HangmanApiGatewayAuthorizer }
  addMove:
    handler: handler.addMove
    events:
      - http:
          path: move/{id}
          method: put
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: { Ref: HangmanApiGatewayAuthorizer }
  history:
    handler: handler.history
    events:
      - http:
          path: history
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: { Ref: HangmanApiGatewayAuthorizer }
